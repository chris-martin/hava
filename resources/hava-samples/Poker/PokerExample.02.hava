// CARD ELEMENTS

// Faces
token JACK, QUEEN, KING, ACE;
FACES = (2, 3, 4, 5, 6, 7, 8, 9, 10, JACK, QUEEN, KING, ACE);

token CLUB, DIAMOND, HEART, SPADE;
SUITS = (CLUB, DIAMOND, HEART, SPADE);

// Cards
struct Card(face, suit);
function randomCard = Card(random(FACES), random(SUITS));

// Hands
handSize = 5;
function randomHand = collect(i=1 to handSize) {randomCard};

// Returns true if hand contains no duplicate cards
function isValidHand(hand) = 
  first(i=2 to handSize, j=1 to i-1 | hand[i]==hand[j]) {ERROR} != ERROR;


// POKER HAND TYPE

function isTwoPair(hand) = key(hand)==9;

// SERVICE FUNCTIONS

// Number of times a suit appears in a hand
function suitCountInHand(suit, hand) = sum(card in hand) {card.suit==suit};

// Number of times a face appears in a hand
function faceCountInHand(face, hand) = 
  sum(card in hand) {card.face==face};

// Key
function key(hand) = sum(card in hand) {faceCountInHand(card.face, hand)};

// SAMPLE STATISTICS

N = 10000;

table samples = 
  collect(i=1 to N, hand=randomHand | isValidHand(hand) && isTwoPair(hand)) 
    {hand};